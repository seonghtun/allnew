emergency.target 복구를 위한 모드

< > 시스템 라이브러리 맞구나 .
" "  사용자 라이브러리 

파일을 옮기거나 걔 경로에 라이브러리가 없으면 100% 에러가 난다.

header 를 lib가 아닌 include 에 넣어줘야한다. include 는 헤더파일 lib 라이브러리 파일 로 통상적으로 구분해놓는다.

extern 왜 extern 이두개에 함수에서 쓸게아니기때문에 원래는 이 두개의 정의가 main 함수가에잇는 위치에 와있어야된다.
그래야만 얘를 헤더파일에 넣어놨다. 내부에 있지않다. 외부함수를 내가 참조하겠다 하는것을 extern 함수로 이용하면된다.

ar r 은 ar 아키브 를 통해서 묶어주기만한다
ar rs 를 통해서 인포메이션을 제대로 입력이된다.

변수 만들어서 굳이 그걸 출력하는데 변수만드는걸 신중하게 생각해라.
지금도 작은 프로그램 을 할필요가있다. 최적화된 optimization된
short int 같은 짧은형을 하는게 낫다.

65536? = 2^16

오픈 하드웨어 프로그래밍 할때는 작은 메모리라 최적화 꼭 신경써야지

boot iso 부팅에 필요한 최소한의 ios만 포함되어있다. 
1G 내외 boot iso

설치원천은 바꾸면 더빠름 가장 가까운 미러가 데스티네이션이 몰린다??

소프트웨어 GUI 쓰지않는버전도있다. 안쓰고 나중에 넣을수도있다.


centos 10G 넘어감 모든 패키지 다쓸수가없다.

최근 버전 centos9은 바꿀필요가없다
/boot => 1024M
/boot/efi => 700M 최근 cmos 환경에서 제공하는 부팅을 할때 요새 모드들은 다 지원 합니다. 밖에서 나도 킬수있으면 다른 사람도 쓸수있다. 털릴가능성이 있다.


dnf apt-get 비슷하지만 조금 다르다.
upgrade로 정보 불러옴 진짜 install 해야 설치된다. 8 기준에 커널은 불안정하다 커널 컴파일은 kernel-devel 을 설치해야된다. 
개발 툴 설치 안되어 있다. 서버 GUI 만하면
kernel을 최신 으로 업그레이드하기 위한것

centos8 stream 은 client 용으로 되버렸다. rhl 대폭강화 상업용 리눅스 rhl 성능을 낼수있다.
centos7 마지막 버전이 진짜 서버용 으로 사용하는것이다.

패도라 더 무겁다 . centos 가볍고 
레드헷 계열을 처음 접하면 패도라를 추천한다. 

커밋 루트를 허용한다. centos는 말이다.
사용자 유저 리스트를 없애는 방법이다. 서로 호환이 안되는 다른 gdm 이다.
없어서 새로 추가해준것이다. 

dconf update 를 해주면 conf 파일을 새로 읽어준다. 그러면 우리가 새로 만들어높은 로그인 설정을 읽어준다.
메모장이 뜬다.

/etc/skel 사용자의 초기화 스크립트가 공유되는 폴더이다. 공유 공유

환경 적용은 source

centos 버전 패치된거같다. 원래는 시간이 안맞는다 
ntp 서버를 만들어본다
time 서버로 쓸수있는 방법중 하나이다.
chronyd 시간을 동기화주는 데몬 enable 허용 자동 부팅과 같이 실행되게 만들고싶다 싶을때 사용하는 옵션이다. 자동으로 쓰고 싶은가보다.
ip는 mac주소를 따라 달라진다.

# systemctl restart chronyd 바뀐 conf 로 적용해서 실행할수있게 restart
restart 하면 active 아닌 상태일수도있으니 status로 확인한번 해줘야한다.

공유기 에잇는 어쩌구 서버를 맞춰라?

redhat 을 깐 가장 큰이유는 우분투랑 다르기 때문에 yum 말고 rpm 이라는 명령어를 알고싶다.

xterm 쓰는건 console로 로그인 해야되는구나
설마 터미널? 맞누
# rpm -ivh xterm-resize-331-1.el8_3.2.x86_64.rpm 
i install v verbose h hash

rpm -qa -q query -a all
# rpm -ivh --replacepkgs xterm-331-1.el8_3.2.x86_64.rpm

boot iso가 붙어있으면 cd boot가 되버린다.
리눅스에는 라이브 cd 기능이있다. bootable image 가 아까 그건 아니다.
root 하위에 cdrom 이미지로 들어가있으니 확인할수있다.

레드햇이 정통파 스러운점이 있다. 
/run/media/root/CentOS-Stream-8-BaseOS-x86_64/images] 진짜 부트 이미지다. 여기내용이다.



내가 사용하는 명령어가 도대체 어떤 패키지에 설치되어있는지 볼수가있다.
# rpm -qf /usr/bin/xterm -f 는 절대 경로 를 줘야되고 바이너리 파일에 주소를 줘야한다.
# rpm -qi coreutils 패키지에 뭐가 포함되어있는지? 확인하는 명령어
# rpm -qif /usr/bin/ls 실행파일에 의해서 검색한것 어떤게 포함되어있는지
# rpm -ql coreutils 어떤게 포함되어있는지 목록보기?
# rpm -qR xterm 패키지에 의존성 확인하기 쿼리문 날리기 
# rpm -e xterm 지우기 의존성 헤치지 않게 지우기
-====================================-
yum
yum list | grep xterm 설치 된 이 아닌 설치가능한 것이다.
설치된것은 어떻게 검색 
yum list installed | grep xterm
# yum list installed xterm

# yum list updates

yum 은 의존성을 신경안써도된다. 종속적인 패키지 같이 설치해준다.

-------------------------------------------------------------
레포 관리하는 방식 ubuntu 랑 완전히 다르다

지금 하는방식은 centos7 파일기준이라 9까지 적용가능한지는 모린다.

프리셋(preset)은 다음을 가리킨다. 기본값: 응용 소프트웨어, 컴퓨터 프로그램 등에 자동으로 할당되는 설정이나 값

probe

현실세계 random 은 제비뽑기 같은건 진짜 random인데
컴퓨터로 random 은 random seed 를 가지고 거기서 만들어져 있는 걸로 random 을 뽑는거라 random 이 random 이 아니다.




항상 자주 나오는 번호를 가중치줘서하면 로또 맞출수도있다.

lettile endian : rightmost 가장 오른쪽 bit 를 워드 주소로쓴다 rightmost 한 바이트를 읽는다? 한비트가 아니라 바이트?
big endian : leftmost 가장 왼쪽 bit를 워드 주소로 쓴다.

네트워크 data 전송 할때 엔디안 방식 차이 : Network byte Order

리틀레디안은 숫자 1에대해서는 왼쪽 부터 1이 들어가게 배치한다? 읽는걸 배치를 그렇게보는건가? 거꾸로 만든다 ?

아 저장방법 똑같이저장되는구나 00000000 00000000 00000000 00000001 로 1이 저장되서 이 주소에서 값을 가져올때 방법이 나뉘게 되는거구나 저장방식이 다른줄알았네 

network byte order가 big endian 이기때문에 서버용은 바꿀필요없게 big endian으로 한다.


리버스하는 함수가 htonl 
ntohl이다. 아아아아 
거꾸로하면 overheader?

오버헤드는 특정한 기능을 수행하기 위해 추가로 사용되는 컴퓨터 자원을 치칭하는 것이다.

패키지 설치 레포 방식인게 yum 이고 

configure : 환경설정 파일들 쭉읽어서 어디에 configure가 있고 쭉 검사하는 단계

configure 하면 ->make file 만들어지고 

make install 하면 된다

usr/local 에 설치 prefix 키워드
make 파일 라이브러리 만들거나 컴파일 여러개 할때
자동적으로 할수있게 만든게 make 라는 유틸리티이다.

make라는걸 소스파일로 쓴다.

타겟에 맞는 규칙이없다고 뜨면 파일이 없어서그럼 의존성 파일 여러개를 한번에 다룰수있고
고친파일만 recompile 만 할수잇다. 초하수가 만든 make file

여러번 등장하는걸 축약한걸 macro 라고한다.

조건파일은  : 다음에 오는 의존성 파일들 d$ 로 끝까지지움

space 인곳은 tab 이면 에러난다.

확장자를 때고 바꾸는것을 치환이라한다.
old 를 new 패턴으로 바꾼다. 생각해라
그렇게 멍청하지않다. test.o 만잇어도 test.c 가있따고 당연히 생각한다.

% 가 * 이다 . Make 치환할때 모든 문자 를 의미 명시해준것이다.

Make 파일 못만들때 있다. 파이선 안에서 컴파일하고싶을때 어떻게하는지
make `basename -s .c *`

make 파일을 가지고 있어야 make 가 되야 
상세한 옵션을 줄수없다. 