-ql 어떤파일들이 같이포함되어있는지
-i 는 자세한정보

레포는 파일내 정의된 레포지토리 파일?

cd /etc/yum.repos.d/ 여기안에있는 레포 경로에 있는것 
yum repolist 사용가능한 레포지토리 목록을 보여준다

apt zpo? yum remove 이다. 
xfs 는 lost found가 없다.

.c * 하면 확장자를 때고 실행파일로 만들겠다.

all 다른 이름이여도 바로 커멘드 안쓰면 밑에 타겟까지 같이실행되는건가? 


 ubuntu 는 자바 profile 이 파일은 어떤 것들이 들어있는거지 ?
.bashrc 다시 적용해줘야된다.

커밋 아이디 순서가 2개이상 차이나면 안되는건가 pull 이 ?

checkeod.c 를 만들어서 lib 만든다

라이브러리는 오브젝트 파일에 결합이다.

gcc -o quiz1 quiz1.c -I ./lib -L ./lib -l checkeod -I 대문자 i 는 header 파일 위치 L 은 라이브러리 위치 -l 소문자 엘은 라이브러리 명 
Uncauht Error  파일을 만들어버렷는데 갱신이안된다.

msa c언어 조차도 구조적으로 만들지말고 모듈화 되게 만들어야한다.
API는 오픈이다. 
시크릿한건 라이브러리 ..

intend 하는거 ? 

용법 구분을 뭘로하지 ? 어떨떈 for 고 어떨떈 while  조건값에 의해서 몇번 반복할지 프로그래머가 알지못할떄 while문
for 은 몇번반복 할지 알때 최악 몇번인지 알때

c언어로 해야지 견고하고 강인하다 . robust? 

shell script 만 도특하게 마지막 에 끝날때 if 를 뒤집어서 fi 로 만들어줘야한다.

shell 변수도 그냥 $ 로 호출하면된다. 
aCF Format 우주 커틀리스 모니터 색깔 구분안됨 
아주 레거시 환경 극악에 환경 파워 떄문에 우주정거장 여전히 유닉스 

shell script 는 가장 명확하게 indent? 칸띄기 해줘야됨

if [ [변수] -lt [변수] ] -lt는 lessthan 항상 큰숫자를 내보네 주는것 

쉘스크립트는 시스템 어쩌구인 어셈블러랑 거의 비슷하게 작동한다?

가장 헷갈리는거 

$가 뭔지 알아야한다. 
$1 매개변수 $0 파일명 자기자신 $# 크로스헤치 쓰면 개수 

내부 스크립트 자동화 하는데 좋은게 쉘스크립트같은게 없다. 정말 편하다. 수동으로 만들어서쓰는게 좋다. 이것과 크론과 결합하면 정말좋다.
명령어 결합이 ; 으로본다 명령어에 끝남이아니라?

./ifelif.sh: line 21: syntax error: unexpected end of file if 문이 fi 로 안끝낫다 인가?

read a 사용자로 부터 입력받은 그냥 값이다 a 에 넣어주나 강제적으로 타입을 바꾸는건없어? 근데 있어 
case 에서 ;; 은 break 이다

조건에서 -ep 비교연산자가 그러면 숫자에서만 쓸수있구나. 아 맞네 
bash == 이 먹는데 다른 쉘은 에러난다. 쉘 밑에는 어셈블러가있다. 어셈블러에 맞춰주는게 좋다.

데이터 타입을 "$1"로 해주면 문자열이 되는것이구나 

c 라이프 스타일? 아

키보드 입력은 문자열 이라 비교대상이 문자여야한다.

'' single quote 는 * 실행되고 "" double 
`expr $a \* \k` 수식연산을 위한것 반드시 앞뒤로 백틱으로 묶어야한다. 표현식 식계산 

 elif [ $a -lt 1 ]; then
                 echo "input value is not betwwen 1 and 9"

이것도 break가 있구나.

이렇게 tranformation 이 쉽게 일어난다.

shell script or -o and -a  이다.

대괄호 두개가 변수하고 숫자 하고 봤는데 숫자 값이 변수 앞으로 와서 오리지날과 다르기 때문에 대괄호 두개로 써야한다. 형식 파괴할떄 쓴다 . 원래 안될떄 쓰면된다.
bc가 계산기다.